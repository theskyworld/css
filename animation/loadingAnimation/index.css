/*让元素一维（行/列）上移动的方式*/
/*margin*/
/*top、left、right、bottom*/
/*translate*/

body{
    margin: 0 auto;
    padding: 20px;
    max-width: 1200px;
    overflow-y: scroll;
    font-family: 'Open Sans',sans-serif;
    font-weight: 400;
    color: #777;
    background-color: #f7f7f7;
}
.content{
    padding: 15px;
    overflow: hidden;
    /*background-color: #e7e7e7;*/
    background-color: rgba(0, 0, 0, 0.06);
}
h1{
    padding-bottom: 15px;
    border-bottom: solid 1px #d8d8d8;
    font-weight: 600;
}
h1 span{
    font-family: monospace,serif;
}
h3{
    padding-bottom: 20px;
    box-shadow: 0 1px 0 rgba(0,0,0,.1),
                0 2px 0 rgba(255,255,255,.9);
}
p{
    margin: 0;
    padding: 10px 0;
    color: #777;
}
/*设置每个wrap（每个动画的背景/容器）的样式*/
.load-wrap{
    float: left;
    width: 100px;
    height: 100px;
    margin: 0 10px 10px 0;
    padding: 20px 20px 20px;
    border-radius: 5px;
    text-align: center;
    background-color: #d8d8d8;
}
.load-wrap p{
    padding: 0 0 20px;
}
.load-wrap p:before{
    content: '';
    clear: both;
}
.load-wrap:last-child{
    margin-right: 0;
}
/*生成动画的最初状态（三个蓝色的点）*/
.line{
    display: inline-block;
    width: 15px;
    height: 15px;
    border-radius: 15px;
    background-color: #4b9cdb;
}
/*1*/
/*对第一个点进行动画的设置*/
.load-1 .line:nth-of-type(1){
    animation: loadingA 1.5s 0s infinite;
}
/*对第二个点进行动画的设置*/
.load-1 .line:nth-of-type(2){
    animation: loadingA 1.5s 0.5s infinite;
}
/*对第三个点进行动画的设置*/
.load-1 .line:nth-of-type(3){
    animation: loadingA 1.5s 1s infinite;
}
/*三个点的动画，简单的高度变化*/
@keyframes loadingA {
    0%{
        height: 15px;
    }
    50%{
        height: 35px;
    }
    100%{
        height: 15px
    }
}
/*2*/
/*对第一个点进行动画的设置*/
.load-2 .line:nth-of-type(1){
    animation: loadingB 1.5s 0s infinite;
}
/*对第二个点进行动画的设置*/
.load-2 .line:nth-of-type(2){
    animation: loadingB 1.5s 0.5s infinite;
}
/*对第三个点进行动画的设置*/
.load-2 .line:nth-of-type(3){
    animation: loadingB 1.5s 1s infinite;
}
/*三个点的动画，简单的长度变化*/
@keyframes loadingB {
    0%{
        width: 15px;
    }
    50%{
        width: 35px;
    }
    100%{
        width: 15px
    }
}
/*3*/
/*对第一个点进行动画的设置*/
.load-3 .line:nth-of-type(1){
    animation: loadingC 0.6s 0.3s infinite;
}
/*对第二个点进行动画的设置*/
.load-3 .line:nth-of-type(2){
    animation: loadingC 0.6s 0.2s infinite;
}
/*对第三个点进行动画的设置*/
.load-3 .line:nth-of-type(3){
    animation: loadingC 0.6s 0.1s infinite;
}
/*三个点的动画，简单的长度变化*/
@keyframes loadingC {
    /*通过translate(平移）来改变元素的位置，动画中常用，且不会发生浮动的负面影响*/
    0%{
        transform: translate(0,0);
    }
    50%{
        transform: translate(0,15px);
    }
    100%{
        transform: translate(0,0);
    }
}
/*4*/
.ring-1{
    width: 10px;
    height: 10px;
    margin: 0 auto;
    padding: 10px;
    border: dashed 5px #4b9cdb;
    border-radius: 50%;
    animation: loadingD 1.5s 0.3s cubic-bezier(0.17,0.37,0.43,0.67) infinite;
}
@keyframes loadingD {
    0%{
        transform: rotate(0deg);
    }
    50%{
        transform: rotate(180deg);
    }
    100%{
        transform: rotate(360deg);
    }
}
/*5*/
/*生成动画中不动的蓝色的圈*/
.ring-2{
    position: relative;
    width: 45px;
    height: 45px;
    margin: 0 auto;
    border: solid 4px #469cdb;
    border-radius: 100%;
}
/*生成蓝色圈上的球*/
.ball-holder{
    position: absolute;
    width: 12px;
    height: 45px;
    left: 17px;
    top: 0;
}
.ball{
    position: absolute;
    top: -11px;
    left: 0;
    width: 16px;
    height: 16px;
    border-radius: 100%;
    background: #4282b3;
}
/*设置让球不断转圈的动画*/
.load-5 .ball-holder{
    animation: loadingE 1.3s linear infinite;
}
@keyframes loadingE {
    0%{
        transform: rotate(0deg);
    }
    100%{
        transform: rotate(360deg);
    }
}
/*6*/
.letter-holder{
    padding: 16px;
}
.letter{
    float: left;
    font-size: 14px;
    color: #777;
}
.load-6 .letter{
    animation-name: loadingF;
    animation-duration: 1.6s;
    animation-iteration-count: infinite;
    animation-direction: initial;
}
/*设置每个字母的不同的动画延迟，从而形成单词上出现光波从左到右移动的特效*/
.l-1{
    animation-delay: 0.48s;
}
.l-2{
    animation-delay: 0.6s;
}
.l-3{
    animation-delay: 0.72s;
}
.l-4{
    animation-delay: 0.84s;
}
.l-5{
     animation-delay: 0.96s;
}
.l-6{
      animation-delay: 1.08s;
}
.l-7{
    animation-delay: 1.2s;
}
.l-8{
    animation-delay: 1.32s;
}
.l-9{
    animation-delay: 1.44s;
}
.l-10{
    animation-delay: 1.56s;
}
@keyframes loadingF {
    0%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}
/*7*/
/*生成蓝色方块*/
.square{
    width: 12px;
    height: 12px;
    border-radius: 4px;
    background-color: #4b9cdb;
}
/*蓝色放块不断运动的动画*/
.load-7 .square{
    animation: loadingG 1.5s cubic-bezier(0.17,0.37,0.43,0.67) infinite;
}
@keyframes loadingG {
    0%{
        transform: translate(0,0) rotate(0deg);
    }
    50%{
        transform: translate(70px,0) rotate(360deg);
    }
    100%{
        transform: translate(0,0) rotate(0deg);
    }
}
/*8*/
.load-8 .line{
    animation: loadingH 1.5s cubic-bezier(0.17,0.37,0.43,0.67) infinite  ;
}
@keyframes loadingH {
    0%{
        width: 15px;
    }
    50%{
        width: 35px;
        padding: 4px;
    }
    100%{
        width: 15px;
    }
}
/*9*/
/*两个蓝色圆点的外部容器，不显示*/
.spinner{
    position: relative;
    width: 45px;
    height: 45px;
    margin: 0 auto;
}
/*生成大小相同的两个蓝色圆点*/
.bubble-1,
.bubble-2
{
    position: absolute;
    top: 0;
    width: 25px;
    height: 25px;
    border-radius: 100%;
    background-color: #4b9cdb;
}
.bubble-2{
    top: auto;
    bottom: 0;
}
/*外部容器不断进行原地旋转360度的动画*/
.load-9 .spinner{
    animation: loadingI 2s linear infinite;
}
/*两个蓝色圆点不断进行缩小和放大的动画，同时跟随spinner容器进行原地旋转360度的动画*/
.load-9 .bubble-1,
.load-9 .bubble-2{
    animation: bounce 2s ease-in-out infinite;
}
/*第二个圆点缩小和放大动画的延迟*/
.load-9 .bubble-2{
    animation-delay: -1s;
}
@keyframes loadingI {
    100%{
        transform: rotate(360deg);
    }
}
@keyframes bounce {
    0%,100%{
        transform: scale(0);
    }
    50%{
        transform: scale(1);
    }
}
/*10*/
/*生成初始为蓝色的条*/
.bar{
    float: left;
    width: 15px;
    height: 6px;
    border-radius: 2px;
    background-color: #4b9cdb;
}
.load-10 .bar{
    animation: loadingJ 2s cubic-bezier(0.17,0.37,0.43,0.67) infinite;
}
@keyframes loadingJ {
    0%,100%{
        transform: translate(0,0);
    }
    50%{
        transform: translate(80px,0);
        background-color: #f5634a;
        width: 25px;
    }

}